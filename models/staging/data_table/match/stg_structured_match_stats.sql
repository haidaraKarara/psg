with match_stats as (

    select * from {{ source('raw_data', 'match_stats') }}
),
structured_match_stats as (

    select

    	v:matchInfo:id::string as matchId,
        v:matchInfo:description::string as description,
        v:matchInfo:sport:id::string as sportId,
        v:matchInfo:sport:name::string as sportName,
        v:matchInfo:ruleset:id::string as rulesetId,
        v:matchInfo:ruleset:name::string as rulesetName,
        v:matchInfo:competition:id::string as competitionId,
        v:matchInfo:competition:name::string as competitionName,
        v:matchInfo:competition:competitionCode::string as competitionCode,
        v:matchInfo:competition:competitionFormat::string as competitionFormat,
        v:matchInfo:competition:country:id::string as countryId,
        v:matchInfo:competition:country:name::string as countryName,
        v:matchInfo:tournamentCalendar:id::string as tournamentCalendarId,
        v:matchInfo:tournamentCalendar:name::string as tournamentCalendarName,
        try_to_date(regexp_replace(v:matchInfo:tournamentCalendar:startDate,'z|Z')) as tournamentCalendarStartDate,
        try_to_date(regexp_replace(v:matchInfo:tournamentCalendar:endDate,'z|Z')) as tournamentCalendarEndDate,
        v:matchInfo:stage:id::string as stageId,
        v:matchInfo:stage:formatId::string as stageformatId,
        v:matchInfo:stage:name::string as stageName,
        try_to_date(regexp_replace(v:matchInfo:stage:startDate,'z|Z')) as stageStartDate,
        try_to_date(regexp_replace(v:matchInfo:stage:endDate,'z|Z')) as stageEndDate,
        v:matchInfo:series:id::string as seriesId,
        v:matchInfo:series:formatId::string as seriesformatId,
        v:matchInfo:series:name::string as seriesName,
        v:matchInfo:venue:id::string as venueId,
        v:matchInfo:venue:neutral::string as venueNeutral,
        v:matchInfo:venue:longName::string as venueLongName,
        v:matchInfo:venue:shortName::string as venueShortName,
     	v:liveData:matchDetails:matchStatus::string as matchStatus,
        v:liveData:matchDetails:winner::string as winner,
        v:matchInfo:contestant[0].code::string as contestantCode_1,
        v:matchInfo:contestant[0].id::string as contestantId_1,
        v:matchInfo:contestant[0].name::string as contestantName_1,
        v:matchInfo:contestant[0].shortName::string as contestantShortName_1,
        v:matchInfo:contestant[0].officialName::string as contestantOfficialName_1,
        v:matchInfo:contestant[0].position::string as contestantPosition_1,
        v:matchInfo:contestant[0].country:id::string as contestantCountryId_1,
        v:matchInfo:contestant[0].country:name::string as contestantCountryName_1,
        v:matchInfo:contestant[1].code::string as contestantCode_2,
        v:matchInfo:contestant[1].id::string as contestantId_2,
        v:matchInfo:contestant[1].name::string as contestantName_2,
        v:matchInfo:contestant[1].shortName::string as contestantShortName_2,
        v:matchInfo:contestant[1].officialName::string as contestantOfficialName_2,
        v:matchInfo:contestant[1].position::string as contestantPosition_2,
        v:matchInfo:contestant[1].country:id::string as contestantCountryId_2,
        v:matchInfo:contestant[1].country:name::string as contestantCountryName_2,
        v:liveData:goal::variant as goal,
		v:liveData:matchDetails:scores:ht:home::int as scoresHtHome,
        v:liveData:matchDetails:scores:ht:away::int as scoresHtAway,
        v:liveData:matchDetails:scores:ft:home::int as scoresFtHome,
        v:liveData:matchDetails:scores:ft:away::int as scoresFtAway,
        v:liveData:matchDetails:scores:total:home::int as scoresTotalHome,
        v:liveData:matchDetails:scores:total:away::int as scoresTotalAway,
        v:liveData:lineUp[0].contestantId::string as lineUpContestantId_1,
        v:liveData:lineUp[0].formationUsed::int as lineUpFormationUsed_1,
        v:liveData:lineUp[0].player::variant as lineUpPlayer_1,
        v:liveData:lineUp[0].teamOfficial:id::string as lineUpTeamOfficialId_1,
        v:liveData:lineUp[0].teamOfficial:firstName::string as lineUpTeamOfficialFirstName_1,
        v:liveData:lineUp[0].teamOfficial:lastName::string as lineUpTeamOfficialLastName_1,
        v:liveData:lineUp[0].teamOfficial:type::string as lineUpTeamOfficialType_1,
        v:liveData:lineUp[0].kit:id::int as lineUpKitId_1,
        v:liveData:lineUp[0].kit:colour1::string as lineUpKitColour1_1,
        v:liveData:lineUp[0].kit:colour2::string as lineUpKitColour2_1,
        v:liveData:lineUp[0].kit:type::string as lineUpKitType_1,
        v:liveData:lineUp[0].stat::variant as lineUpStat_1,
		v:liveData:lineUp[1].contestantId::string as lineUpContestantId_2,
        v:liveData:lineUp[1].formationUsed::int as lineUpFormationUsed_2,
        v:liveData:lineUp[1].player::variant as lineUpPlayer_2,
        v:liveData:lineUp[1].teamOfficial:id::string as lineUpTeamOfficialId_2,
        v:liveData:lineUp[1].teamOfficial:firstName::string as lineUpTeamOfficialFirstName_2,
        v:liveData:lineUp[1].teamOfficial:lastName::string as lineUpTeamOfficialLastName_2,
        v:liveData:lineUp[1].teamOfficial:type::string as lineUpTeamOfficialType_2,
        v:liveData:lineUp[1].kit:id::int as lineUpKitId_2,
        v:liveData:lineUp[1].kit:colour1::string as lineUpKitColour1_2,
        v:liveData:lineUp[1].kit:colour2::string as lineUpKitColour2_2,
        v:liveData:lineUp[1].kit:type::string as lineUpKitType_2,
        v:liveData:lineUp[1].stat::variant as lineUpStat_2,
        v:liveData:substitute::variant as substitute,
        v:liveData:card::variant as card,
        v:liveData:matchDetailsExtra:attendance::int as attendance,
        v:liveData:matchDetailsExtra:matchOfficial::variant as matchOfficial,
        v:liveData:matchDetails:matchLengthMin::int as matchLengthMin,
    	v:matchInfo:coverageLevel::int as coverageLevel,
        try_to_date(regexp_replace(v:matchInfo:date,'z|Z')) as MatchDate,
        try_to_time(regexp_replace(v:matchInfo:time,'z|Z')) as MatchTime,
        try_to_date(regexp_replace(v:matchInfo:localDate,'z|Z')) as MatchLocalDate,
        try_to_time(regexp_replace(v:matchInfo:localTime,'z|Z')) as MatchLocalTime,
    	v:matchInfo:week::int as week,
    	v:matchInfo:postMatch::int as postMatch,
    	v:matchInfo:numberOfPeriods::int as numberOfPeriods,
    	v:matchInfo:periodLength::int as periodLength,
        try_to_timestamp(regexp_replace(v:matchInfo:lastUpdated,'z|Z')) as lastUpdated, 
        v as src
        
    from match_stats
)

select * from structured_match_stats